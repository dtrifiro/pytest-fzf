[build-system]
requires = ["setuptools>=48", "setuptools_scm[toml]>=6.3.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[project]
name = "pytest-fzf"
description = "fzf-based test selector for pytest"
readme = "README.md"
license = {text = "GNU GPL v3.0"}
authors = [{ name = "Daniele TrifirÃ²", email = "dtrifiro@redhat.com" }]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Development Status :: 4 - Beta",
]
requires-python = ">=3.8"
dynamic = ["version"]
dependencies = [
    "iterfzf==1.1.0.44.0",
    "pytest>=6.0.0",
]

[project.urls]
Issues = "https://github.com/dtrifiro/pytest-fzf/issues"
Source = "https://github.com/dtrifiro/pytest-fzf"

[project.entry-points."pytest11"]
"pytest-fzf" = "pytest_fzf.main"

[project.optional-dependencies]
tests = [
    "pytest-sugar==0.9.7",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "mypy==1.7.1",
]
dev = [
    "pytest-fzf[tests]",
]

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.pytest.ini_options]
addopts = "-ra"

[tool.coverage.run]
branch = true
source = ["pytest_fzf", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if typing.TYPE_CHECKING:",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "raise AssertionError",
    "@overload",
]

[tool.mypy]
# Error output
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
pretty = true
check_untyped_defs = false
# Warnings
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
files = ["src", "tests"]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "iterfzf",
]

[tool.codespell]
ignore-words-list = " "

[tool.ruff]
ignore = [
    "S101", # assert
    "PLR2004", # magic-value-comparison
    "PLW2901", # redefined-loop-name
    "ISC001", # single-line-implicit-string-concatenation
    "SIM105", # suppressible-exception
    "SIM108", # if-else-block-instead-of-if-exp

    "D100", # Missing docstring in public module
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
]
select = ["ALL"]
show-source = true
show-fixes = true

[tool.ruff.per-file-ignores]
"noxfile.py" = ["D", "PTH"]
"tests/**" = [ "S", "ARG001", "ARG002", "ANN"]

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
known-first-party = ["pytest_fzf"]
